{"version":3,"sources":["Clock.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ClockWrapper","styled","div","getNewTimeString","Date","toLocaleTimeString","hour","minute","Clock","useState","timeString","setTimeString","useEffect","initializeTime","setTimeout","Wrapper","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6aAGA,IAAMA,EAAeC,IAAOC,IAAV,KAUZC,EAAmB,WACvB,OAAO,IAAIC,MAAOC,mBAAmB,QAAS,CAC5CC,KAAM,UACNC,OAAQ,aAcGC,EAVD,WAAO,IAAD,EACkBC,mBAASN,KAD3B,mBACXO,EADW,KACCC,EADD,KAOlB,OADAC,qBAJuB,SAAjBC,IACJF,EAAcR,KACdW,WAAWD,EAAgB,QAGtB,cAACb,EAAD,UAAeU,K,+GCxBxB,IAAMK,EAAUd,IAAOC,IAAV,KAaEc,EARH,WACV,OACE,eAACD,EAAD,WACE,cAAC,EAAD,IADF,QCIWE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,iBCFdQ,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,IAAD,IACA,cAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1e1a717c.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst ClockWrapper = styled.div`\n  position: fixed;\n  width: 100%;\n  text-align: center;\n  font-size: 50vmin;\n  color: white;\n  line-height: 100vh;\n  font-family: \"Digital Clock\";\n`;\n\nconst getNewTimeString = () => {\n  return new Date().toLocaleTimeString(\"en-GB\", {\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n  });\n};\n\nconst Clock = () => {\n  const [timeString, setTimeString] = useState(getNewTimeString());\n  const initializeTime = () => {\n    setTimeString(getNewTimeString());\n    setTimeout(initializeTime, 1000);\n  };\n  useEffect(initializeTime);\n  return <ClockWrapper>{timeString}</ClockWrapper>;\n};\n\nexport default Clock;\n","import styled from \"styled-components\";\nimport Clock from \"./Clock\";\n\nconst Wrapper = styled.div`\n  background: black;\n  height: 100vh;\n`;\n\nconst App = () => {\n  return (\n    <Wrapper>\n      <Clock />;\n    </Wrapper>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport ScreenWakeLock from \"screen-wake-lock\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ScreenWakeLock />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}